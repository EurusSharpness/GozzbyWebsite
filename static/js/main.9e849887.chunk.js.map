{"version":3,"sources":["serviceWorker.js","components/firebase_functions.js","components/Loading.js","assets/StorePics/productback.jpg","components/Store_functions.js","components/Store.js","components/Client_functions.js","components/Client.js","index.js","components/LoginPage.js"],"names":["Boolean","window","location","hostname","match","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseAuth","auth","FirebaseEmailAuthProvider","EmailAuthProvider","firestore","users","collection","items","ClientClass","document","document_data","this","doc","name","cart","item_id","a","console","error","hasOwnProperty","update","quantity","deleteItem","tcart","copyCart","result","i","Loading","style","display","justifyContent","alignItems","fontSize","marginTop","className","size","width","marginLeft","NoFilter","Client","Products","item_data","id","imagePath","price","brand","description","handleSignIn","setProducts","get","then","products","docs","forEach","product","t","data","push","Number","catch","log","handleSignOut","props","signOut","history","alert","message","handleItemToastActive","getProducts","sortBy","filterBy","client_","modified","slice","sort","b","filter","value","Container","map","itemToast","toast","promise","addItem","pending","render","icon","success","toastId","autoClose","onClose","paddingTop","paddingBottom","alignment","src","alt","position","backgroundColor","onClick","variant","handleItem","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnFocusLoss","pauseOnHover","UserModal","Modal","aria-labelledby","centered","Header","Title","Body","Row","Col","InputGroup","FormControl","placeholder","aria-label","aria-describedby","type","onHide","getElementById","clientdocument","onNameSet","color","strongRegex","RegExp","mediumRegex","password","cpassword","oldPassword","test","provider","credential","currentUser","email","reauthenticateWithCredential","currentuser","updatePassword","Footer","textShadow","AddSortAndFilterButtonsForTest","setSortBy","setFilterBy","Navbar","bg","expand","fluid","Brand","Button","Collapse","Nav","NavDropdown","title","Dropdown","Item","onSelect","DeleteModal","onDelete","currentitemid","needUpdate","totalPrice","loadClient","u","setItemsData","setClientClass","updatedPrices","client","m","item","undefined","ReactDOM","exact","path","component","useState","setEmail","setPassword","isLoading","setIsLoading","useEffect","onAuthStateChanged","signInWithEmailAndPassword","padding","height","backgroundImage","background","textAlign","margin","href","onChange","e","target","label","validate","labelClass","onKeyDown","key","md","sm","xs","to","rounded","startIcon","LoginRounded","confirm_password","setConfirm_Password","flag","handlePasswordChange","p","cp","innerText","createUserInDatabase","set","split","createRandom","rmail","Math","random","toString","substring","pass","handleSignUp","isActive","emailAddress","emailPassword","createUserWithEmailAndPassword","info","response","link","AccountCircleRounded","handleResetPassword","sendPasswordResetEmail","props1","user","setUser","drawer_open","setDrawerOpen","setProduct","React","UsermodalShow","setUserModalShow","userdocument","setUserdocument","userName","setuserName","keyID","pop","AppBar","Toolbar","Typography","flexGrow","resize","overflow","marginRight","show","Drawer","open","itemsData","deleteModalState","setDeleteModalState","toasterOpen","setToasterOpen","currentItemID","setCurrentItemID","setItemsPriceSum","setNeedUpdate","calculateItemsSum","handleItemIncrease","itemID","changeItemQuantity","handleItemDecrease","handleItemDelete","sum","toFixed","columns","field","border","options","showFirstLastPageButtons","showSelectAllCheckbox","tableLayout","showTextRowsSelected","pageSize","Card","float","ListGroup","getClientCart","limit","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e849887.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. Store is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCJsHJXQPx5K2dmSvLLPyvV1XrSBvB8dVQ\",\r\n    authDomain: \"webproject-c5878.firebaseapp.com\",\r\n    databaseURL: \"https://webproject-c5878-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"webproject-c5878\",\r\n    storageBucket: \"webproject-c5878.appspot.com\",\r\n    messagingSenderId: \"448524087667\",\r\n    appId: \"1:448524087667:web:09d602a579731fcc2f5506\",\r\n    measurementId: \"G-6JNYH4QH5K\"\r\n};\r\nif (firebase.apps.length === 0)\r\n    firebase.initializeApp(config);\r\n\r\nexport const FirebaseAuth = firebase.auth();\r\nexport const FirebaseEmailAuthProvider = firebase.auth.EmailAuthProvider;\r\nconst firestore = firebase.firestore();\r\n\r\nexport const users = firestore.collection('users');\r\nexport const items = firestore.collection('products');\r\n\r\n\r\nexport class ClientClass {\r\n    constructor(document, document_data) {\r\n        this.doc = document;\r\n        this.name = document_data.name;\r\n        this.cart = document_data.cart;\r\n    }\r\n\r\n    async addItem(item_id) {\r\n        if (this.cart === null) {\r\n            console.error('Cannot add item, something wrong with data');\r\n            return;\r\n        }\r\n\r\n        // Add new item to the cart with quantity 1 or\r\n        // increase by 1 if already exist\r\n        if (!this.cart.hasOwnProperty(item_id))\r\n            this.cart[item_id] = 0;\r\n        this.cart[item_id]++;\r\n\r\n        // Might need to update visually as well!\r\n        await this.doc.update({cart: this.cart});\r\n    };\r\n\r\n    async changeItemQuantity(item_id, quantity) {\r\n        if (this.cart === null) {\r\n            console.error('Cannot remove item, something is wrong with data!');\r\n            return;\r\n        }\r\n\r\n        if (!this.cart.hasOwnProperty(item_id)) {\r\n            console.error(`User doesn't have the item in his cart! itemID - ${item_id}`);\r\n            return;\r\n        }\r\n\r\n        if (quantity === 0) {\r\n            await this.deleteItem(item_id);\r\n            return;\r\n        }\r\n\r\n        let tcart = this.copyCart();\r\n        tcart[item_id] = quantity;\r\n        await this.doc.update({cart: tcart});\r\n        this.cart[item_id] = quantity;\r\n    }\r\n\r\n    /**\r\n     * remove item from the cart.\r\n     * @param {Number} item_id\r\n     * @returns {Promise<void>}\r\n     */\r\n    async deleteItem(item_id) {\r\n        if (this.cart === null) {\r\n            console.error('Cannot remove item, something is wrong with data!');\r\n            return;\r\n        }\r\n\r\n        if (!this.cart.hasOwnProperty(item_id)) {\r\n            console.error(`User doesn't have the item in his cart! itemID - ${item_id}`);\r\n            return;\r\n        }\r\n\r\n        let tcart = this.copyCart();\r\n        delete tcart[item_id];\r\n        await this.doc.update({cart: tcart});\r\n        delete this.cart[item_id];\r\n    }\r\n\r\n    async clearCart() {\r\n        if (this.cart === {})\r\n            return;\r\n        await this.doc.update({cart: {}});\r\n        this.cart = {};\r\n    }\r\n\r\n    copyCart() {\r\n        let result = {};\r\n        for (let i in this.cart) {\r\n            result[i] = this.cart[i];\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { FaWineBottle } from \"react-icons/fa\"\r\n\r\nexport default function Loading() {\r\n    return <div style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        fontSize: 'x-large',\r\n        marginTop: '5%'\r\n    }}>\r\n        <FaWineBottle className=\"fa fa-spinner fa-spin fa-3x fa-fw\" size={150} width=\"100%\"/>\r\n            <div style={{fontSize: 'xxx-large', marginLeft: '50px'}}>\r\n                Loading... Gozzby store\r\n            </div>\r\n    </div>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/productback.9e338053.jpg\";","import {FirebaseAuth, FirebaseEmailAuthProvider, items} from \"./firebase_functions\";\r\nimport React from \"react\";\r\nimport {Button, Col, FormControl, InputGroup, Modal, Row} from \"react-bootstrap\";\r\nimport {Container} from \"reactstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport\r\n    'bootstrap-css-only/css/bootstrap.min.css';\r\nimport\r\n    'mdbreact/dist/css/mdb.css';\r\nimport {MDBCard, MDBCardBody, MDBCardFooter, MDBCardImage, MDBCardText, MDBCardTitle} from \"mdb-react-ui-kit\";\r\n\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const SortByAscending = 1;\r\nexport const SortByDescending = 2;\r\nexport const NoFilter = 'none';\r\n\r\n/**\r\n * @type {ClientClass}\r\n */\r\nlet Client = null;\r\n\r\nexport class Products {\r\n    /**\r\n     *\r\n     * @param {number} item_id\r\n     * @param {{quantity: any, imagePath: any, price: any, name: any, description: any, brand: any}} item_data\r\n     */\r\n    constructor(item_id, item_data) {\r\n        this.name = item_data.name;\r\n        this.id = item_id;\r\n        this.imagePath = item_data.imagePath;\r\n        this.price = item_data.price;\r\n        this.quantity = item_data.quantity;\r\n        this.brand = item_data.brand;\r\n        this.description = item_data.description;\r\n    }\r\n}\r\n\r\n\r\nexport async function handleSignIn(setProducts) {\r\n    await items.get().then((products) => {\r\n            let result = [];\r\n            products.docs.forEach((product) => {\r\n                const t = product.data();\r\n                result.push(new Products(Number(product.id), {\r\n                    name: t.name,\r\n                    imagePath: t.imagePath,\r\n                    quantity: t.quantity,\r\n                    brand: t.brand,\r\n                    price: t.price,\r\n                    description: t.description\r\n                }));\r\n            });\r\n            setProducts(result);\r\n        }\r\n    ).catch(() => console.log('something went wrong somewhere!'));\r\n}\r\n\r\nexport function handleSignOut(props) {\r\n    FirebaseAuth.signOut().then(() => {\r\n        props.history.push(\"/\");\r\n    }).catch(error => {\r\n        alert(error.message);\r\n    });\r\n}\r\n\r\n\r\n/**+\r\n * @param {Products} product The product to handle\r\n */\r\nlet handleItemToastActive = false;\r\nconst handleItem = (product) => {\r\n    //<button> add to cart..price$\r\n    //left in stock\r\n    const itemToast = async () => {\r\n        if (handleItemToastActive) {\r\n            toast.error('Wait for the process to finish');\r\n            return;\r\n        } else {\r\n            handleItemToastActive = true;\r\n        }\r\n        await toast.promise(Client.addItem(product.id), {\r\n            pending: {\r\n                render() {\r\n                    return \"Adding item \" + product.name + \" to the cart\"\r\n                },\r\n                icon: false,\r\n            },\r\n            success: {\r\n                render() {\r\n                    console.log('adding to cart');\r\n                    return `${product.name} been successfully added to your cart`\r\n                },\r\n                // other options\r\n                icon: \"🟢\",\r\n            },\r\n            error: {\r\n                render({data}) {\r\n                    // When the promise reject, data will contains the error\r\n                    return `Failed to add item to the cart - ${data.message}`\r\n                }\r\n            },\r\n        }, {\r\n            toastId: '1234',\r\n            autoClose: 1000,\r\n            onClose: () => handleItemToastActive = false\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div key={'unique item id' + product.id} style={{paddingTop: \"50px\", paddingBottom: \"50px\"}} className=\"col-md-4 mb-4 d-flex align-items-stretch\">\r\n            <MDBCard alignment=\"center\">\r\n                <MDBCardImage className=\"img-fluid\" src={product.imagePath} alt='...' position='top'/>\r\n                <br/>\r\n\r\n\r\n                <MDBCardBody>\r\n                    <MDBCardTitle>{product.name}</MDBCardTitle>\r\n                    <MDBCardText>\r\n                        {product.description}\r\n                    </MDBCardText>\r\n                </MDBCardBody>\r\n                <MDBCardFooter>\r\n                    <div style={{backgroundColor: \"lightgray\"}}>\r\n                        <MDBCardTitle>$ {product.price}</MDBCardTitle>\r\n                    </div>\r\n                    <Button onClick={itemToast} style={{width: \"100%\"}} variant=\"outlined\">Add\r\n                        to cart</Button>{' '}\r\n\r\n                </MDBCardFooter>\r\n            </MDBCard>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n//onClick={async()=> await Client.addItem(product.id)}\r\n\r\n/**\r\n * @param {Array<Products>} products\r\n * @param {number} sortBy\r\n * @param {string} filterBy\r\n * @param {ClientClass} client_\r\n */\r\nexport function getProducts(products, sortBy, filterBy, client_) {\r\n    Client = client_;\r\n    let modified = products.slice(); // Copy the array.\r\n    console.log('Sorting by: ' + sortBy);\r\n    console.log('Filter by: ' + filterBy);\r\n\r\n    // Sort the array according to the Sorting value...\r\n    if (sortBy === SortByAscending) {\r\n        modified = products.sort((a, b) => {\r\n            return a.price - b.price;\r\n        });\r\n    } else if (sortBy === SortByDescending) {\r\n        modified = products.sort((a, b) => {\r\n            return b.price - a.price;\r\n        });\r\n    }\r\n    // Sort Filter by brand...\r\n    if (filterBy !== NoFilter) {\r\n        modified = products.filter((value => value.brand === filterBy));\r\n    }\r\n    console.log(modified);\r\n    return (\r\n        <Container>\r\n            {modified.map((value => handleItem(value)))}\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={2000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                draggable\r\n                pauseOnFocusLoss={false}\r\n                pauseOnHover={false}\r\n                style={{width: 'auto'}}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nexport function UserModal(props) {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-tit    le-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Welcome to your profile settings!\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Row>\r\n                    <Col>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                                id={'NicknameValue'}\r\n                                placeholder=\"New Nickname\"\r\n                                aria-label=\"New Nickname\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                type={'text'}\r\n                            />\r\n                        </InputGroup>\r\n                        <Button variant={\"contained\"} className={'shadow-none'} onClick={async () => {\r\n                            props.onHide();\r\n                            let name = document.getElementById('NicknameValue').value;\r\n                            if (name.length === 0) return;\r\n                            await props.clientdocument.update({name: name}).then(() => {\r\n                                console.log('Name successfully changed to ' + name + '!');\r\n                                props.onNameSet(name);\r\n                            }).catch((() => console.log('something went wrong with updating the name!')));\r\n                        }}>Save</Button>\r\n                    </Col>\r\n                    <Col>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                                id={'CurrentPassword'}\r\n                                placeholder=\"Current password\"\r\n                                aria-label=\"Current password\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                type={'password'}\r\n                            />\r\n\r\n                        </InputGroup>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                                id={'Password'}\r\n                                placeholder=\"New password\"\r\n                                aria-label=\"New Password\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                type={'password'}\r\n                            />\r\n\r\n                        </InputGroup>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                                id={'ConfirmPassword'}\r\n                                placeholder=\"Confirm new password\"\r\n                                aria-label=\"Confirm password\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                type={'password'}\r\n                            />\r\n                        </InputGroup>\r\n                        <p style={{color: \"#320D8F\", fontSize: 'large'}}>\r\n                            * Password must contain: <br/>\r\n                            1 Upper case character <br/>\r\n                            1 Lower case character <br/>1 Number<br/>Password length must be at least 6.\r\n                        </p>\r\n                        <Button variant={\"contained\"} className={'shadow-none'} onClick={async () => {\r\n                            const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\");\r\n                            const mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\r\n                            let password = document.getElementById('Password').value;\r\n                            let cpassword = document.getElementById('ConfirmPassword').value;\r\n                            let oldPassword = document.getElementById('CurrentPassword').value;\r\n                            if (password.length === 0) return;\r\n                            if (password !== cpassword) {\r\n                                alert('passwords do not match!');\r\n                                return;\r\n                            }\r\n                            if (!strongRegex.test(password) && !mediumRegex.test(password)) {\r\n                                alert('your password is not strong enough! follow the rules');\r\n                                return;\r\n                            }\r\n\r\n                            const provider = FirebaseEmailAuthProvider.credential(\r\n                                FirebaseAuth.currentUser.email,\r\n                                oldPassword\r\n                            )\r\n                            await FirebaseAuth.currentUser.reauthenticateWithCredential(provider).then(async () => {\r\n                                await props.currentuser.updatePassword(password).then(() => {\r\n                                    console.log('Password successfully changed to ' + password + '!');\r\n                                    props.onHide();\r\n                                }).catch((() => console.log('something went wrong with updating the name!')));\r\n                            }).catch(() => {\r\n                                console.log('Authentication failed');\r\n                                alert('password is not strong enough');\r\n                            });\r\n\r\n                        }}>Save</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n\r\n                <Button variant={\"outline-secondary\"} className={'shadow-none'} style={{textShadow: false}}\r\n                        onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport {FirebaseAuth, users, ClientClass} from \"./firebase_functions\";\r\nimport Loading from \"./Loading\";\r\nimport \"./Store.css\";\r\nimport background from \"../assets/StorePics/productback.jpg\"\r\nimport {AiTwotoneShopping} from \"react-icons/ai\"\r\nimport { BsPerson } from \"react-icons/bs\";\r\nimport {AiFillShop} from \"react-icons/ai\";\r\nimport {FaSignOutAlt} from \"react-icons/all\";\r\n\r\nimport {\r\n    handleSignIn,\r\n    handleSignOut,\r\n    getProducts,\r\n    UserModal,\r\n    SortByDescending,\r\n    SortByAscending,\r\n    NoFilter\r\n} from \"./Store_functions\";\r\nimport {Container, Dropdown, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\nimport {Col, Row} from \"reactstrap\";\r\n\r\n\r\n\r\n\r\nexport function Store(props) {\r\n    const [user, setUser] = useState(null);\r\n    const [drawer_open, setDrawerOpen] = useState(false);\r\n    const [products, setProduct] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [sortBy, setSortBy] = useState(SortByAscending); // 0 = No Sorting.\r\n    const [filterBy, setFilterBy] = useState(NoFilter);\r\n    const [UsermodalShow, setUserModalShow] = React.useState(false);\r\n    const [userdocument, setUserdocument] = React.useState(null);\r\n    const [userName, setuserName] = React.useState('');\r\n    const [client_, setClientClass] = React.useState(null);\r\n\r\n\r\n    let keyID = 0;\r\n    const handleCloseDrawer = () => {\r\n        setDrawerOpen(false);\r\n    };\r\n    useEffect(() => {\r\n        return FirebaseAuth.onAuthStateChanged(async u => {\r\n            if (u) {\r\n                setIsLoading(true);\r\n                setUser(u);\r\n                await handleSignIn(setProduct);\r\n\r\n                await users.doc(u.email).get().then((data) => {\r\n                    const pop = data.data();\r\n                    console.log(pop);\r\n                    setuserName(data.data().name);\r\n                    if (client_ === null) {\r\n                        setClientClass(new ClientClass(users.doc(u.email), data.data()));\r\n                    }\r\n                }).catch((e) => {\r\n                    console.log(e.message);\r\n                    handleSignOut(props);\r\n                });\r\n                setUserdocument(users.doc(u.email));\r\n                setIsLoading(false);\r\n            } else {\r\n                props.history.push(\"/\");\r\n            }\r\n        });\r\n    }, [props ,client_, props.history]);\r\n\r\n\r\n    if (!user) {\r\n        return <div>no user</div>;\r\n    }\r\n    if (isLoading)\r\n        return <div className={'Container'}><Loading/></div>\r\n    return (\r\n        //style={{ backgroundImage: `url(${background})` }}\r\n        <div key={'storekey' + keyID++}  style={{ backgroundImage: `url(${background})` }}>\r\n            <AppBar key={'storekey' + keyID++} position=\"static\" color=\"default\">\r\n                <Toolbar>\r\n\r\n\r\n                    <Typography\r\n                        key={'storekey' + keyID++}\r\n                        variant=\"h6\"\r\n                        style={{marginLeft: 15, flexGrow: 1}}\r\n                    >\r\n                        Gozzby Store <AiFillShop/>\r\n\r\n                    </Typography>\r\n\r\n\r\n                    <Button\r\n                        key={'storekey' + keyID++}\r\n                        style={{\r\n                            resize: 'horizontal',\r\n                            overflow: 'hidden',\r\n                            height: '100px',\r\n                        width:'200px'}}\r\n                        onClick={() => props.history.push('/client-cart')}\r\n                        >\r\n                        <AiTwotoneShopping size={50} width=\"100%\"/>\r\n                            Go to cart\r\n                    </Button>\r\n                    <Typography style={{marginRight: 30}} onClick={() => {\r\n                        // props.history.push('/client')\r\n                        setUserModalShow(true);\r\n                    }}><BsPerson  size={50}>a</BsPerson>\r\n                        Hi! {userName}\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={() => handleSignOut(props)}>\r\n                        <FaSignOutAlt size={30}/>\r\n                        Sign out\r\n                    </Button>\r\n\r\n                    <UserModal\r\n                        show={UsermodalShow}\r\n                        onHide={() => setUserModalShow(false)}\r\n                        clientdocument={userdocument}\r\n                        currentuser={user}\r\n                        onNameSet={(name) => setuserName(name)}\r\n                    />\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer open={drawer_open} onClose={handleCloseDrawer}>\r\n                I'm a drawer\r\n            </Drawer>\r\n\r\n            {/* ----------- Test Filter and Sort functions --------------*/}\r\n\r\n            {AddSortAndFilterButtonsForTest(setSortBy, setFilterBy)}\r\n            {/*--------------------------- END TEST ----------------------*/}\r\n\r\n            {products ? getProducts(products, sortBy, filterBy, client_) : ''}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction AddSortAndFilterButtonsForTest(setSortBy, setFilterBy) {\r\n    return (\r\n        <div >\r\n            <Navbar  variant=\"light\" bg=\"light\" expand=\"lg\">\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col>\r\n                    <Navbar.Brand>Gozzby brands</Navbar.Brand>\r\n                        </Col>\r\n                        <Col>\r\n                    <Button onClick={() => setFilterBy(NoFilter)} variant=\"contained\">All</Button>{' '}\r\n                        </Col>\r\n                        <Col>\r\n                    <Button onClick={() => setFilterBy('vodka')} variant=\"contained\">Vokda</Button>{' '}\r\n                        </Col>\r\n                        <Col>\r\n                    <Button onClick={() => setFilterBy('beer')} variant=\"contained\">Beers</Button>{' '}\r\n                        </Col>\r\n                        <Col>\r\n                    <Button onClick={() => setFilterBy('whiskey')} variant=\"contained\">Whiskey</Button>{' '}\r\n                        </Col>\r\n                        <Col >\r\n                    <Button onClick={() => setFilterBy('tequila')} variant=\"contained\">Tequila</Button>{' '}\r\n                        </Col>\r\n                        <Col>\r\n                    <Navbar.Collapse id=\"navbar-dark-example\">\r\n                        <Nav>\r\n\r\n                            <NavDropdown\r\n                                id=\"nav-dropdown-dark-example\"\r\n                                title=\"SortBy\"\r\n                            >\r\n                                <Dropdown.Item onSelect={() => setSortBy(SortByAscending)}>Low --> High</Dropdown.Item>\r\n                                <Dropdown.Item onSelect={() => setSortBy(SortByDescending)}>High --> Low</Dropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n            </Navbar>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n","// THE FILE IS BLOODY EMPTY LAD!!\r\nimport React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport {\r\n    Button,\r\n    Modal\r\n} from \"react-bootstrap\";\r\n\r\n\r\nexport function DeleteModal(props) {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-tit    le-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Are you sure you want to delete this item?\r\n                </Modal.Title>\r\n                <Modal.Body>\r\n                    <Button variant={\"danger\"} className={'shadow-none'} style={{textShadow: false}}\r\n                            onClick={async () => {\r\n                                props.onDelete(props.currentitemid);\r\n                                props.onHide();\r\n                            }}>Yes</Button>\r\n                    <Button variant={\"outline-secondary\"} className={'shadow-none'}\r\n                            style={{marginLeft: 10, textShadow: false}}\r\n                            onClick={props.onHide}>No</Button>\r\n                </Modal.Body>\r\n            </Modal.Header>\r\n        </Modal>\r\n    );\r\n}\r\n\r\n/**\r\n *\r\n * @param {{doconfirm: function, onHide: function, itemsum: number }} props\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nexport function ConfirmCheckoutModal(props) {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-tit    le-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Are you sure you want to checkout? total price = {props.itemsum}\r\n                </Modal.Title>\r\n                <Modal.Body>\r\n                    <Button variant={\"danger\"} className={'shadow-none'} style={{textShadow: false}}\r\n                            onClick={async () => {\r\n                                await props.doconfirm();\r\n                                props.onHide();\r\n                            }}>Yes</Button>\r\n                    <Button variant={\"outline-secondary\"} className={'shadow-none'}\r\n                            style={{marginLeft: 10, textShadow: false}}\r\n                            onClick={props.onHide}>No</Button>\r\n                </Modal.Body>\r\n            </Modal.Header>\r\n        </Modal>\r\n    );\r\n}","import React from 'react';\r\nimport Loading from \"./Loading\";\r\nimport {FirebaseAuth, users, items, ClientClass} from \"./firebase_functions\"\r\nimport {useEffect, useState} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport {DeleteModal} from \"./Client_functions\";\r\nimport {Button, Card, Col, Container, ListGroup, Navbar, Row} from \"react-bootstrap\";\r\nimport {Products} from \"./Store_functions\";\r\nimport \"./Client.css\";\r\nimport MaterialTable from 'material-table';\r\nimport {BsFillPlusCircleFill} from \"react-icons/bs\";\r\nimport {AiFillMinusCircle} from \"react-icons/ai\";\r\nimport {AiOutlineRollback} from \"react-icons/ai\";\r\n\r\n\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nlet needUpdate = true;\r\nlet totalPrice = 0;\r\n/**\r\n * @param {firebase.User} u\r\n * @param setItemsData\r\n * @param setClientClass\r\n * @param {function} updatedPrices\r\n */\r\nasync function loadClient(u, setItemsData, setClientClass, updatedPrices) {\r\n    if (needUpdate) {\r\n        console.log('load client started')\r\n        let client = await users.doc(u.email).get();\r\n        let data = client.data();\r\n        setClientClass(new ClientClass(users.doc(u.email), data));\r\n        let m = {};\r\n        let allItems = await items.get();\r\n        allItems.docs.forEach((item) => {\r\n            if (data.cart[item.id] !== undefined) {\r\n                let t = item.data();\r\n                m[item.id] = new Products(Number(item.id), {\r\n                    name: t.name,\r\n                    imagePath: t.imagePath,\r\n                    quantity: t.quantity,\r\n                    brand: t.brand,\r\n                    price: t.price,\r\n                    description: t.description\r\n                });\r\n            }\r\n        });\r\n        setItemsData(m);\r\n        needUpdate = false;\r\n        updatedPrices();\r\n    }\r\n}\r\n\r\n\r\nexport function ClientCart(props) {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [itemsData, setItemsData] = useState(null);\r\n    const [client_, setClientClass] = React.useState(null);\r\n    const [deleteModalState, setDeleteModalState] = React.useState(false);\r\n    const [toasterOpen, setToasterOpen] = React.useState(false);\r\n    const [currentItemID, setCurrentItemID] = React.useState(-1);\r\n    const [, setItemsPriceSum] = React.useState(0);\r\n    const [, setNeedUpdate] = React.useState(true);\r\n\r\n    useEffect(() => {\r\n        return FirebaseAuth.onAuthStateChanged(async u => {\r\n            await loadClient(u, setItemsData, setClientClass, calculateItemsSum);\r\n            if (!client_) return;\r\n            setIsLoading(false);\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [client_, props]);\r\n\r\n\r\n    const getClientCart = () => {\r\n        const columns = [\r\n            {\r\n                title: \"Name\",\r\n                field: \"name\",\r\n            },\r\n            {\r\n                title: \"Brand\",\r\n                field: \"brand\",\r\n            },\r\n            {\r\n                title: 'Image',\r\n                field: 'img',\r\n                render: item => <img src={item.imagePath} alt=\"\" border=\"3\" height=\"100\" width=\"100\"/>\r\n            },\r\n            {\r\n                title: \"Price\",\r\n                field: \"price\",\r\n                type: 'numeric',\r\n                render: item => <h2>${item.price}</h2>\r\n            },\r\n            {\r\n                title: \"Quantity\",\r\n                field: \"quantity\",\r\n                type: 'numeric',\r\n                render: item =>\r\n                    <div>\r\n                        <BsFillPlusCircleFill size={19} onClick={() => handleItemIncrease(item.id)}/>\r\n                        <h2>{client_.cart[item.id]}</h2>\r\n                        <AiFillMinusCircle size={19} onClick={() => handleItemDecrease(item.id)}/>\r\n                    </div>\r\n            },\r\n            {\r\n                title: \"\",\r\n                render: item => <Button variant=\"danger\" onClick={() => {\r\n                    setCurrentItemID(item.id);\r\n                    setDeleteModalState(true)\r\n                }}>Delete</Button>\r\n            }\r\n        ];\r\n\r\n        let result = [];\r\n        for (const key in client_.cart) {\r\n            result.push(itemsData[key]);\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Navbar variant=\"light\" bg=\"light\" expand=\"lg\">\r\n                    <Container fluid>\r\n                        <Row>\r\n                            <Col> <Navbar.Brand>\r\n                                <AiOutlineRollback size={28} onClick={() => {\r\n                                    needUpdate = true;\r\n                                    props.history.push('/store')\r\n                                }}/> Back to\r\n                                store</Navbar.Brand></Col>\r\n                        </Row>\r\n                    </Container>\r\n\r\n                </Navbar>\r\n                <MaterialTable title=\"Your Cart\" data={result} columns={columns}\r\n                               options={{\r\n                                   showFirstLastPageButtons: false,\r\n                                   showSelectAllCheckbox: false,\r\n                                   tableLayout: \"auto\",\r\n                                   showTextRowsSelected: false,\r\n                                   pageSize: [result.length]\r\n                               }}/>\r\n                <Card style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    float: \"right\", width: '100%'\r\n                }}>\r\n                    <Card.Header>Cart Totals</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>Total : {totalPrice}</ListGroup.Item>\r\n                        <ListGroup.Item><Button>Checkout</Button></ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const handleItemIncrease = async (itemID) => {\r\n        if (toasterOpen)\r\n            return;\r\n        setToasterOpen(true);\r\n        await toast.promise(client_.changeItemQuantity(itemID, client_.cart[itemID] + 1), {\r\n            pending: 'Processing',\r\n            success: 'Item quantity increased',\r\n            error: 'Failed to increase quantity'\r\n        }, {\r\n            onClose: () => setToasterOpen(false)\r\n        });\r\n        calculateItemsSum();\r\n        needUpdate = true;\r\n        setNeedUpdate(true);\r\n    };\r\n\r\n    const handleItemDecrease = async (itemID) => {\r\n        if (toasterOpen)\r\n            return;\r\n        setToasterOpen(true);\r\n        await toast.promise(client_.changeItemQuantity(itemID, client_.cart[itemID] - 1), {\r\n            pending: 'Processing',\r\n            success: 'Item quantity decreased',\r\n            error: 'Failed to decrease quantity'\r\n        }, {\r\n            onClose: () => setToasterOpen(false)\r\n        });\r\n        calculateItemsSum();\r\n        needUpdate = true;\r\n        setNeedUpdate(true);\r\n    };\r\n\r\n    const handleItemDelete = async (itemID) => {\r\n        if (toasterOpen)\r\n            return;\r\n        setToasterOpen(true);\r\n        await toast.promise(client_.deleteItem(itemID), {\r\n            pending: 'Processing',\r\n            success: 'Item deleted',\r\n            error: 'Failed to delete item'\r\n        }, {\r\n            onClose: () => setToasterOpen(false)\r\n        });\r\n        calculateItemsSum();\r\n        needUpdate = true;\r\n        setNeedUpdate(true);\r\n    };\r\n\r\n    const calculateItemsSum = () => {\r\n        let sum = 0;\r\n        if (!client_ || !client_.cart || !itemsData)\r\n            return;\r\n        for (let key in client_.cart) {\r\n            sum += Number(Number(itemsData[key].price).toFixed()) * client_.cart[key];\r\n        }\r\n        console.log('Sum = ' + sum);\r\n        totalPrice = sum;\r\n        setItemsPriceSum(sum);\r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className={'Container'}>\r\n                <Loading/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div style={{display: \"flex\", paddingTop: '5%'}}>\r\n            <Container fluid={true} className={''}>\r\n                {getClientCart()}\r\n                <DeleteModal\r\n                    show={deleteModalState}\r\n                    onHide={() => {\r\n                        setDeleteModalState(false)\r\n                    }}\r\n                    onDelete={handleItemDelete}\r\n                    currentitemid={currentItemID}\r\n                />\r\n                <ToastContainer\r\n                    position=\"top-center\"\r\n                    autoClose={2000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    limit={1}\r\n                    pauseOnFocusLoss={false}\r\n                    pauseOnHover={false}\r\n                    rtl={false}\r\n                    draggable\r\n                />\r\n            </Container>\r\n        </div>\r\n    );\r\n}","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {Store} from \"./components/Store\";\r\nimport {SignUp, SignIn, ResetPassword} from \"./components/LoginPage\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport {ClientCart} from \"./components/Client\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <div>\r\n            <Route exact path=\"/\" component={SignIn}/>\r\n            <Route path=\"/signup\" component={SignUp}/>\r\n            <Route path=\"/reset_password\" component={ResetPassword}/>\r\n            <Route path=\"/store\" component={Store}/>\r\n\r\n            <Route path=\"/client-cart\" component={ClientCart}/>\r\n        </div>\r\n    </HashRouter>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {FirebaseAuth, users} from \"./firebase_functions\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./login.css\"\r\nimport background from \"../assets/StorePics/productback.jpg\"\r\nimport Loading from \"./Loading\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap';\r\nimport SendIcon from '@material-ui/icons/SendRounded';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport {\r\n    MDBCard,\r\n    MDBCardBody,\r\n    MDBCardHeader,\r\n    MDBContainer,\r\n    MDBIcon,\r\n    MDBInput,\r\n    MDBModalFooter,\r\n    MDBRow\r\n} from \"mdb-react-ui-kit\";\r\nimport {Col, Row} from \"reactstrap\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {AccountCircleRounded} from \"@material-ui/icons\";\r\nimport {LoginRounded} from \"@mui/icons-material\";\r\n\r\nexport function SignIn(props) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    useEffect(() => {\r\n        return FirebaseAuth.onAuthStateChanged(u => {\r\n            if (u) {\r\n                props.history.push(\"/store\");\r\n            }\r\n        });\r\n    }, [props.history]);\r\n\r\n    const handleSignIn = async () => {\r\n        setIsLoading(true);\r\n        await FirebaseAuth\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n    if (isLoading)\r\n        return <Loading/>\r\n    return (\r\n\r\n        <div style={{padding: \"50px\",\r\n            height: \"100vh\",\r\n            backgroundImage: `url(${background})`}}>\r\n            <MDBContainer style={{\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n\r\n            }}>\r\n                <MDBCard\r\n                    className='card-image'\r\n                    style={{\r\n                        display: \"inline-block\",\r\n                        margin: \"0 auto\",\r\n                        padding: \"3px\",\r\n                        backgroundColor: \"#8ebf42\",\r\n                        backgroundImage:\r\n                            'url(https://mdbcdn.b-cdn.net/img/Photos/Others/pricing-table7.jpg)',\r\n                        width: '28rem'\r\n                    }}\r\n                >\r\n                    <div className='text-white rgba-stylish-strong py-5 px-5 z-depth-4'>\r\n                        <div className='text-center'>\r\n                            <strong>Gozzby store</strong>\r\n                            <h3 className='white-text mb-5 mt-4 font-weight-bold'>\r\n\r\n                                <strong>SIGN</strong>\r\n                                <a href='/' className='green-text font-weight-bold'>\r\n                                    <strong> IN</strong>\r\n                                </a>\r\n                            </h3>\r\n                        </div>\r\n                        <MDBInput\r\n                            value={email}\r\n                            onChange={e => {\r\n                                setEmail(e.target.value);\r\n                            }}\r\n                            type=\"email\"\r\n                            id=\"form2Example1\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Email address\"\r\n                            label='Your email'\r\n                            validate={'true'}\r\n                            labelClass='white-text'\r\n\r\n                        />\r\n                        <MDBInput\r\n                            onChange={e => {\r\n                                setPassword(e.target.value);\r\n                            }}\r\n                            onKeyDown={(key) => {\r\n                                if (key.key === 'Enter') handleSignIn();\r\n                            }}\r\n                            value={password}\r\n                            type=\"password\"\r\n                            id=\"form2Example2\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Password\"\r\n                            label='Your password'\r\n                            validate={'true'}\r\n                            labelClass='white-text'\r\n                        />\r\n                        <br/><br/>\r\n                        <Row>\r\n                            <Col md={12} sm={12} xs={12} style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\"\r\n                            }}>\r\n                                Don't have an account? <Link to=\"/signup\">Sign up!</Link>\r\n                            </Col>\r\n                        </Row>\r\n                        <br/>\r\n                        <Row>\r\n                            <Col md={12} sm={12} xs={12} style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\"\r\n                            }}>\r\n                                Forgot your password? <Link to=\"/reset_password\">Reset password!</Link>\r\n                            </Col>\r\n                        </Row>\r\n                        <br/><br/>\r\n\r\n                        <MDBRow style={{display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\"}} className='d-flex align-items-center mb-4'>\r\n\r\n                                <Button\r\n                                    onClick={handleSignIn}\r\n                                    type=\"submit\"\r\n                                    className=\"btn-block z-depth-1\"\r\n                                    color='primary'\r\n                                    variant={'contained'}\r\n                                    rounded={'true'}\r\n                                    startIcon={<LoginRounded/>}\r\n                                    style={{width:\"150px\",fontSize: \"18px\"}}\r\n                                >\r\n                                    Sign in\r\n                                </Button>\r\n\r\n                        </MDBRow>\r\n                    </div>\r\n                </MDBCard>\r\n\r\n            </MDBContainer>\r\n\r\n            {/****************/}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport function SignUp(props) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirm_password, setConfirm_Password] = useState(\"\");\r\n    const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\");\r\n    const mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\r\n\r\n    let flag = false;\r\n    const handlePasswordChange = () => {\r\n        const p = document.getElementById(\"password\").value;\r\n        const cp = document.getElementById(\"cpassword\").value;\r\n\r\n        if (strongRegex.test(p)) {\r\n            document.getElementById(\"password1error\").style.color = \"green\";\r\n            document.getElementById(\"password1error\").innerText = 'password is strong';\r\n            flag = true;\r\n\r\n        } else if (mediumRegex.test(p)) {\r\n            document.getElementById(\"password1error\").style.color = \"orange\";\r\n            document.getElementById(\"password1error\").innerText = 'password is midium';\r\n            flag = true;\r\n\r\n        } else {\r\n            document.getElementById(\"password1error\").style.color = \"red\";\r\n            document.getElementById(\"password1error\").innerText = 'password is too weak';\r\n            flag = false;\r\n\r\n        }\r\n        if (p.length === 0)\r\n            return;\r\n        if (p !== cp) {\r\n            document.getElementById(\"password2error\").style.color = \"red\";\r\n            document.getElementById(\"password2error\").innerText = \"passwords do not match !\"\r\n            flag = false;\r\n        } else {\r\n            document.getElementById(\"password2error\").style.color = \"lightgreen\";\r\n            document.getElementById(\"password2error\").innerText = \"passwords match !\"\r\n            flag = true;\r\n        }\r\n        console.log(flag);\r\n    };\r\n    const createUserInDatabase = async (email) => {\r\n        console.log(email);\r\n        await users.doc(email).set({cart: {}, name: email.split('@')[0]});\r\n    }\r\n\r\n    const createRandom = () => {\r\n        const rmail = Math.random().toString(36).substring(2, 15) + '@test.test';\r\n        const pass = 'qwer1234'\r\n        document.getElementById('emailInput').value = rmail;\r\n        document.getElementById(\"password\").value = pass;\r\n        document.getElementById(\"cpassword\").value = pass;\r\n    }\r\n\r\n    const handleSignUp = async () => {\r\n        if(email === '')\r\n            createRandom();\r\n        handlePasswordChange();\r\n        console.log(flag);\r\n        let success = false;\r\n        if (!flag)\r\n            return;\r\n        // if got here then all good.\r\n        if (toast.isActive('this is love'))\r\n            return;\r\n        const emailAddress =  document.getElementById('emailInput').value;\r\n        const emailPassword = document.getElementById(\"password\").value;\r\n        const response = await toast.promise(\r\n            FirebaseAuth.createUserWithEmailAndPassword(emailAddress, emailPassword), {\r\n                pending: {\r\n                    render() {\r\n                        return \"Creating account\"\r\n                    },\r\n                    icon: false,\r\n                },\r\n                success: {\r\n                    render() {\r\n                        console.log('creating account');\r\n                        console.log('account created');\r\n                        success = true;\r\n                        toast.info('logging in');\r\n                        return `Account has been created`\r\n                    },\r\n                    // other options\r\n                    icon: \"✔️\",\r\n                    autoClose: 1000\r\n                },\r\n                error: {\r\n                    render({data}) {\r\n                        console.log(email);\r\n                        // When the promise reject, data will contains the error\r\n                        return `Failed to create account - ${data.message}`\r\n                    }\r\n                },\r\n            }, {\r\n                toastId: 'this is love',\r\n                onClose: () => {if(success) {\r\n                    createUserInDatabase(emailAddress).then(() => {\r\n                        props.history.push('/');\r\n                    });\r\n                }}\r\n            }\r\n        );\r\n\r\n        console.log(response);\r\n    };\r\n\r\n    return (\r\n        <div style={{padding: \"50px\", height: \"1500px\", backgroundImage: `url(${background})`}}>\r\n            <MDBContainer style={{\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n            }}>\r\n                <MDBCard\r\n                    className='card-image'\r\n                    style={{\r\n                        display: \"inline-block\",\r\n                        margin: \"0 auto\",\r\n                        padding: \"3px\",\r\n                        backgroundColor: \"#8ebf42\",\r\n                        backgroundImage:\r\n                            'url(https://mdbcdn.b-cdn.net/img/Photos/Others/pricing-table7.jpg)',\r\n                        width: '28rem'\r\n                    }}\r\n                >\r\n                    <div className='text-white rgba-stylish-strong py-5 px-5 z-depth-4'>\r\n                        <div className='text-center'>\r\n                            <strong>Gozzby store</strong>\r\n                            <h3 className='white-text mb-5 mt-4 font-weight-bold'>\r\n\r\n                                <strong>SIGN</strong>\r\n                                <a href={'/signup'} link='/signup' className='green-text font-weight-bold'>\r\n                                    <strong> Up</strong>\r\n                                </a>\r\n                            </h3>\r\n                        </div>\r\n                        <MDBInput\r\n                            value={email}\r\n                            onChange={e => {\r\n                                setEmail(e.target.value);\r\n                            }}\r\n                            type=\"email\"\r\n                            id=\"emailInput\"\r\n                            className=\"form-control\"\r\n                            label='Your email'\r\n                            validate={'true'}\r\n                            labelClass='white-text'\r\n                        />\r\n                        <MDBInput\r\n                            onChange={e => {\r\n                                setPassword(e.target.value);\r\n                                handlePasswordChange();\r\n                            }}\r\n                            value={password}\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            className=\"form-control\"\r\n                            label='password'\r\n                            validate={'true'}\r\n                            labelClass='white-text'\r\n                        />\r\n\r\n                        <MDBInput\r\n                            onChange={e => {\r\n                                setConfirm_Password(e.target.value);\r\n                                handlePasswordChange();\r\n                            }}\r\n                            onKeyDown={async (key) => {\r\n                                if (key.key === 'Enter') await handleSignUp();\r\n                            }}\r\n                            value={confirm_password}\r\n                            type=\"password\"\r\n                            id=\"cpassword\"\r\n                            className=\"form-control\"\r\n                            label='Confirm password '\r\n                            validate={'true'}\r\n                            labelClass='white-text'\r\n                        />\r\n                        <span className={\"error\"}><p id=\"password1error\"/></span>\r\n                        <span className={\"error\"}><p id=\"password2error\"/></span>\r\n                        <br/>\r\n                        <div>\r\n                            login into existing account <Link to=\"/\">Sign in!</Link>\r\n                        </div>\r\n\r\n                        <br/><br/><br/>\r\n                        <MDBRow style={{display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\"}} className='d-flex align-items-center mb-4'>\r\n\r\n                            <Button\r\n                                onClick={handleSignUp}\r\n                                className=\"btn-block z-depth-1\"\r\n                                color='primary'\r\n                                variant={'contained'}\r\n                                startIcon={<AccountCircleRounded/>}\r\n                                rounded={'true'}\r\n                                style={{width:\"150px\",fontSize: \"18px\"}}\r\n                            >\r\n                                Sign up\r\n                            </Button>\r\n                        </MDBRow>\r\n                    </div>\r\n                </MDBCard>\r\n                <ToastContainer\r\n                    position=\"top-center\"\r\n                    autoClose={2000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss={false}\r\n                    draggable\r\n                    pauseOnHover={false}\r\n                    style={{width: 'auto'}}\r\n                />\r\n            </MDBContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function ResetPassword(props) {\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const handleResetPassword = async () => {\r\n        if (toast.isActive('resetToast'))\r\n            return;\r\n        let success = false;\r\n        await toast.promise(FirebaseAuth.sendPasswordResetEmail(email), {\r\n                pending: {\r\n                    render() {\r\n                        return \"Sending Email\"\r\n                    },\r\n                    icon: false,\r\n                },\r\n                success: {\r\n                    render() {\r\n                        success = true;\r\n                        return `Email successfully sent`\r\n                    },\r\n                    // other options\r\n                    icon: \"🟢\", autoClose: 1500\r\n                },\r\n                error: {\r\n                    render({data}) {\r\n                        // When the promise reject, data will contains the error\r\n                        return `Failed to send email - ${data.message}`\r\n                    }\r\n                },\r\n            }, {\r\n                toastId: 'resetToast',\r\n                onClose: props1 => {\r\n                    console.log(props1);\r\n                    if(success)\r\n                        props.history.push('/');\r\n                }\r\n            }\r\n        );\r\n    }\r\n    return (\r\n        <div style={{padding: \"50px\", height: \"1500px\", backgroundImage: `url(${background})`}}>\r\n            <MDBContainer style={{\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n            }}>\r\n                <MDBCard style={{\r\n                    display: \"inline-block\",\r\n                    margin: \"0 auto\",\r\n                    padding: \"3px\",\r\n                    width: '28rem'\r\n                }}>\r\n                    <MDBCardBody>\r\n                        <MDBCardHeader className=\"form-header warm-flame-gradient rounded\">\r\n                            <h3 className=\"my-3\">\r\n                                <MDBIcon icon=\"lock\"/> Reset password\r\n                            </h3>\r\n                        </MDBCardHeader>\r\n                        <form>\r\n                            <br/><br/>\r\n                            <div className=\"grey-text\">\r\n                                <MDBInput\r\n                                    placeholder=\"email\"\r\n                                    value={email}\r\n                                    onChange={e => {\r\n                                        setEmail(e.target.value);\r\n                                    }}\r\n                                    onKeyDown={async (key) => {\r\n                                        if (key.key === 'Enter') await handleResetPassword();\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n                            <br/>\r\n                            <Button\r\n                                onClick={handleResetPassword}\r\n                                className=\"btn-block z-depth-1\"\r\n                                color='primary'\r\n                                variant={'contained'}\r\n                                startIcon={<SendIcon/>}\r\n                                rounded={'true'}\r\n                                style={{width:\"150px\",fontSize: \"18px\"}}\r\n                            >\r\n                                Send\r\n                            </Button>\r\n\r\n                        </form>\r\n                        <br/>\r\n                        <MDBModalFooter style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\"\r\n                        }}>\r\n                            <div\r\n                                className=\"font-weight-light\">\r\n                                Did you remember your password? <Link to=\"/\">Sign in!</Link>\r\n                                <br/>\r\n                                Not a member? <Link to=\"/signup\">Sign up!</Link>\r\n                            </div>\r\n                        </MDBModalFooter>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n                <ToastContainer\r\n                    position=\"top-center\"\r\n                    autoClose={5000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss={false}\r\n                    draggable\r\n                    pauseOnHover={false}\r\n                    style={{width: 'auto'}}\r\n                />\r\n            </MDBContainer>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}